#!/bin/bash

# üöÄ OTA Analyzer - Render.com Setup Script
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–º–æ–∂–µ—Ç –±—ã—Å—Ç—Ä–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –¥–µ–ø–ª–æ–π–º–µ–Ω—Ç –Ω–∞ Render.com

echo "üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ OTA Analyzer –¥–ª—è Render.com"
echo "========================================"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
check_requirements() {
    echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π..."
    
    if ! command -v git &> /dev/null; then
        echo "‚ùå Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Git –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        exit 1
    fi
    
    if ! command -v node &> /dev/null; then
        echo "‚ùå Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        exit 1
    fi
    
    echo "‚úÖ –í—Å–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
setup_git() {
    echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
    
    if [ ! -d ".git" ]; then
        echo "‚ùå –≠—Ç–æ –Ω–µ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ Git –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    if ! git remote get-url origin &> /dev/null; then
        echo "‚ùå –£–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –î–æ–±–∞–≤—å—Ç–µ origin –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        exit 1
    fi
    
    echo "‚úÖ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
setup_dependencies() {
    echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    if [ ! -f "package.json" ]; then
        echo "‚ùå package.json –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
    
    if [ ! -d "node_modules" ]; then
        echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
        npm install
    else
        echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
check_config_files() {
    echo "üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
    
    required_files=(
        "render.yaml"
        ".github/workflows/deploy-render.yml"
        "package.json"
        "vite.config.js"
        "tailwind.config.js"
    )
    
    for file in "${required_files[@]}"; do
        if [ ! -f "$file" ]; then
            echo "‚ùå –§–∞–π–ª $file –Ω–µ –Ω–∞–π–¥–µ–Ω"
            exit 1
        fi
    done
    
    echo "‚úÖ –í—Å–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã"
}

# –¢–µ—Å—Ç–æ–≤–∞—è —Å–±–æ—Ä–∫–∞
test_build() {
    echo "üî® –¢–µ—Å—Ç–æ–≤–∞—è —Å–±–æ—Ä–∫–∞..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if [ -z "$VITE_SUPABASE_URL" ]; then
        echo "‚ö†Ô∏è  VITE_SUPABASE_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    if [ -z "$VITE_SUPABASE_ANON_KEY" ]; then
        echo "‚ö†Ô∏è  VITE_SUPABASE_ANON_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    # –ü–æ–ø—ã—Ç–∫–∞ —Å–±–æ—Ä–∫–∏
    echo "üî® –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∫–∏..."
    if npm run build; then
        echo "‚úÖ –°–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–∞"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏"
        exit 1
    fi
}

# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ
show_instructions() {
    echo ""
    echo "üéØ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Render.com:"
    echo "============================================"
    echo ""
    echo "1. üìù –°–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –Ω–∞ Render.com:"
    echo "   https://render.com"
    echo ""
    echo "2. üîó –ü–æ–¥–∫–ª—é—á–∏—Ç–µ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:"
    echo "   - –ù–∞–∂–º–∏—Ç–µ 'New +' ‚Üí 'Static Site'"
    echo "   - –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"
    echo "   - Branch: main"
    echo "   - Build Command: npm install && npm run build"
    echo "   - Publish Directory: dist"
    echo ""
    echo "3. üîê –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Environment Variables –≤ Render:"
    echo "   VITE_SUPABASE_URL=https://your-project.supabase.co"
    echo "   VITE_SUPABASE_ANON_KEY=your_supabase_anon_key"
    echo "   VITE_N8N_WEBHOOK_URL=https://your-n8n-instance.com/webhook/ota-analysis"
    echo "   VITE_OPENAI_API_KEY=sk-your-openai-key"
    echo "   VITE_APP_NAME=OTA Analyzer"
    echo "   VITE_APP_URL=https://your-app-name.onrender.com"
    echo ""
    echo "4. üîë –ù–∞—Å—Ç—Ä–æ–π—Ç–µ GitHub Secrets:"
    echo "   –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –≤–∞—à —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π ‚Üí Settings ‚Üí Secrets and variables ‚Üí Actions"
    echo "   –î–æ–±–∞–≤—å—Ç–µ:"
    echo "   - VITE_SUPABASE_URL"
    echo "   - VITE_SUPABASE_ANON_KEY"
    echo "   - VITE_N8N_WEBHOOK_URL"
    echo "   - VITE_OPENAI_API_KEY"
    echo "   - RENDER_SERVICE_ID"
    echo "   - RENDER_API_KEY"
    echo ""
    echo "5. üöÄ –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π –¥–µ–ø–ª–æ–π:"
    echo "   git add ."
    echo "   git commit -m 'Initial deployment setup'"
    echo "   git push origin main"
    echo ""
    echo "üìö –ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: RENDER_DEPLOYMENT.md"
    echo ""
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É..."
    echo ""
    
    check_requirements
    setup_git
    setup_dependencies
    check_config_files
    test_build
    
    echo ""
    echo "‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
    show_instructions
}

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
main "$@" 